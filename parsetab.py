
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xd8/.\xad\xe1W,\xe4\xe6\x12V\xf1\xe7\x9c&4'
    
_lr_action_items = {'DO':([37,53,54,57,58,59,61,80,84,85,117,118,119,120,122,123,124,125,126,127,128,129,130,131,134,135,141,],[-73,-48,81,-63,-70,-64,-71,-61,-46,-45,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-74,-44,-65,]),'LNOT':([25,38,52,60,82,83,],[52,52,52,52,52,52,]),'RETURN':([15,22,24,27,28,29,31,32,33,34,35,37,40,41,42,43,45,49,50,53,57,58,59,61,65,70,72,74,77,80,81,84,85,101,102,108,109,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,139,141,143,144,146,],[39,39,-16,-9,39,-15,-4,-8,-17,-14,-13,-73,-12,-11,-10,-7,39,-6,39,-48,-63,-70,-64,-71,39,39,-42,39,-5,-61,39,-46,-45,-3,-39,39,-36,-43,-38,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-40,-41,-74,-44,-34,39,-65,39,-37,-35,]),'LPAREN':([4,23,25,26,36,37,38,39,52,53,55,56,57,58,59,60,61,62,66,67,68,69,71,82,83,84,85,88,89,90,91,92,93,94,95,96,97,98,105,106,107,120,123,129,130,131,134,135,136,137,141,142,],[6,51,60,64,67,69,60,71,60,-48,71,71,-63,-70,-64,60,-71,88,71,71,71,71,71,60,60,-46,-45,71,71,71,71,71,71,71,71,71,71,71,71,-68,-69,-47,-52,-49,-51,-50,-74,-44,71,-67,-65,-66,]),'THEN':([37,53,57,58,59,61,70,80,84,85,117,118,119,120,122,123,124,125,126,127,128,129,130,131,134,135,141,],[-73,-48,-63,-70,-64,-71,108,-61,-46,-45,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-74,-44,-65,]),'READ':([15,22,24,27,28,29,31,32,33,34,35,37,40,41,42,43,45,49,50,53,57,58,59,61,65,70,72,74,77,80,81,84,85,101,102,108,109,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,139,141,143,144,146,],[23,23,-16,-9,23,-15,-4,-8,-17,-14,-13,-73,-12,-11,-10,-7,23,-6,23,-48,-63,-70,-64,-71,23,23,-42,23,-5,-61,23,-46,-45,-3,-39,23,-36,-43,-38,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-40,-41,-74,-44,-34,23,-65,23,-37,-35,]),'LBRACKET':([20,37,73,79,],[47,68,112,68,]),'WHILE':([15,22,24,27,28,29,31,32,33,34,35,37,40,41,42,43,45,49,50,53,57,58,59,61,65,70,72,74,77,80,81,84,85,101,102,108,109,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,139,141,143,144,146,],[25,25,-16,-9,25,-15,-4,-8,-17,-14,-13,-73,-12,-11,-10,-7,25,-6,25,-48,-63,-70,-64,-71,25,25,-42,25,-5,-61,25,-46,-45,-3,-39,25,-36,-43,-38,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-40,-41,-74,-44,-34,25,-65,25,-37,-35,]),'PRINT':([15,22,24,27,28,29,31,32,33,34,35,37,40,41,42,43,45,49,50,53,57,58,59,61,65,70,72,74,77,80,81,84,85,101,102,108,109,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,139,141,143,144,146,],[26,26,-16,-9,26,-15,-4,-8,-17,-14,-13,-73,-12,-11,-10,-7,26,-6,26,-48,-63,-70,-64,-71,26,26,-42,26,-5,-61,26,-46,-45,-3,-39,26,-36,-43,-38,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-40,-41,-74,-44,-34,26,-65,26,-37,-35,]),'MINUS':([25,37,38,39,52,53,55,56,57,58,59,60,61,63,66,67,68,69,71,72,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,102,103,104,105,106,107,110,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,141,142,],[55,-73,55,55,55,-48,55,55,-63,-70,-64,55,-71,98,55,55,55,55,55,98,55,55,-46,-45,98,55,55,55,55,55,55,55,55,55,55,55,98,98,98,55,98,-69,98,-47,98,98,-52,98,98,98,98,98,-49,-51,-50,-74,-44,55,98,-65,98,]),'STRING':([64,],[100,]),'BEGIN':([11,14,15,16,18,21,22,24,27,28,29,31,32,33,34,35,37,40,41,42,43,45,46,48,49,50,53,57,58,59,61,65,70,72,73,74,76,77,80,81,84,85,101,102,108,109,111,113,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,139,141,143,144,145,146,147,],[15,-24,28,-19,45,-22,28,-16,-9,28,-15,-4,-8,-17,-14,-13,-73,-12,-11,-10,-7,28,-18,-28,-6,28,-48,-63,-70,-64,-71,28,28,-42,-23,28,-27,-5,-61,28,-46,-45,-3,-39,28,-36,-20,-26,-43,-38,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-40,-41,-74,-44,-34,28,-65,28,-37,-25,-35,-21,]),'LAND':([37,53,54,57,58,59,61,70,80,84,85,86,117,118,119,120,122,123,124,125,126,127,128,129,130,131,134,135,141,],[-73,-48,82,-63,-70,-64,-71,82,-61,-46,-45,82,-59,82,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-74,-44,-65,]),'RPAREN':([6,7,8,9,19,20,37,53,57,58,59,61,69,78,79,80,84,85,86,87,99,100,103,105,106,107,110,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,137,141,142,],[-75,-30,11,-31,-29,-32,-73,-48,-63,-70,-64,-71,-75,115,-73,-61,-46,-45,119,120,132,-72,133,135,-68,-69,120,-33,-59,-60,-62,-47,141,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-74,-44,-67,-65,-66,]),'SEMI':([14,22,24,27,29,31,32,33,34,35,37,40,41,42,43,48,49,53,57,58,59,61,65,72,73,74,76,77,84,85,101,102,109,113,115,116,120,123,129,130,131,132,133,134,135,138,141,144,145,146,],[21,50,-16,-9,-15,-4,-8,-17,-14,-13,-73,-12,-11,-10,-7,76,-6,-48,-63,-70,-64,-71,50,-42,111,50,-27,-5,-46,-45,-3,-39,-36,-26,-43,-38,-47,-52,-49,-51,-50,-40,-41,-74,-44,-34,-65,-37,147,-35,]),'NE':([37,53,57,58,59,61,63,84,85,87,120,123,129,130,131,134,135,141,],[-73,-48,-63,-70,-64,-71,93,-46,-45,93,-47,-52,-49,-51,-50,-74,-44,-65,]),'PLUS':([25,37,38,39,52,53,55,56,57,58,59,60,61,63,66,67,68,69,71,72,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,102,103,104,105,106,107,110,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,141,142,],[56,-73,56,56,56,-48,56,56,-63,-70,-64,56,-71,96,56,56,56,56,56,96,56,56,-46,-45,96,56,56,56,56,56,56,56,56,56,56,56,96,96,96,56,96,-69,96,-47,96,96,-52,96,96,96,96,96,-49,-51,-50,-74,-44,56,96,-65,96,]),'LT':([37,53,57,58,59,61,63,84,85,87,120,123,129,130,131,134,135,141,],[-73,-48,-63,-70,-64,-71,92,-46,-45,92,-47,-52,-49,-51,-50,-74,-44,-65,]),'COMMA':([6,7,8,9,19,20,37,53,57,58,59,61,69,84,85,105,106,107,114,120,123,129,130,131,134,135,137,141,142,],[-75,-30,12,-31,-29,-32,-73,-48,-63,-70,-64,-71,-75,-46,-45,136,-68,-69,-33,-47,-52,-49,-51,-50,-74,-44,-67,-65,-66,]),'COLON':([10,17,],[13,44,]),'ASSIGN':([30,37,134,],[66,-73,-74,]),'$end':([1,3,5,48,76,113,],[-2,0,-1,-28,-27,-26,]),'GT':([37,53,57,58,59,61,63,84,85,87,120,123,129,130,131,134,135,141,],[-73,-48,-63,-70,-64,-71,89,-46,-45,89,-47,-52,-49,-51,-50,-74,-44,-65,]),'END':([22,24,27,29,31,32,33,34,35,37,40,41,42,43,49,53,57,58,59,61,65,72,74,77,84,85,101,102,109,115,116,120,123,129,130,131,132,133,134,135,138,141,144,146,],[48,-16,-9,-15,-4,-8,-17,-14,-13,-73,-12,-11,-10,-7,-6,-48,-63,-70,-64,-71,101,-42,113,-5,-46,-45,-3,-39,-36,-43,-38,-47,-52,-49,-51,-50,-40,-41,-74,-44,-34,-65,-37,-35,]),'DIVIDE':([37,53,57,58,59,61,63,72,84,85,87,102,103,104,106,110,120,121,122,123,124,125,126,127,128,129,130,131,134,135,137,141,142,],[-73,-48,-63,-70,-64,-71,90,90,-46,-45,90,90,90,90,90,90,-47,90,90,-52,90,90,90,90,90,90,-51,90,-74,-44,90,-65,90,]),'SKIP':([15,22,24,27,28,29,31,32,33,34,35,37,40,41,42,43,45,49,50,53,57,58,59,61,65,70,72,74,77,80,81,84,85,101,102,108,109,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,139,141,143,144,146,],[35,35,-16,-9,35,-15,-4,-8,-17,-14,-13,-73,-12,-11,-10,-7,35,-6,35,-48,-63,-70,-64,-71,35,35,-42,35,-5,-61,35,-46,-45,-3,-39,35,-36,-43,-38,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-40,-41,-74,-44,-34,35,-65,35,-37,-35,]),'ELSE':([24,27,29,32,33,34,35,37,40,41,42,43,53,57,58,59,61,72,84,85,101,102,109,115,116,120,123,129,130,131,132,133,134,135,138,141,144,146,],[-16,-9,-15,-8,-17,-14,-13,-73,-12,-11,-10,-7,-48,-63,-70,-64,-71,-42,-46,-45,-3,-39,139,-43,-38,-47,-52,-49,-51,-50,-40,-41,-74,-44,143,-65,-37,-35,]),'WRITE':([15,22,24,27,28,29,31,32,33,34,35,37,40,41,42,43,45,49,50,53,57,58,59,61,65,70,72,74,77,80,81,84,85,101,102,108,109,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,139,141,143,144,146,],[36,36,-16,-9,36,-15,-4,-8,-17,-14,-13,-73,-12,-11,-10,-7,36,-6,36,-48,-63,-70,-64,-71,36,36,-42,36,-5,-61,36,-46,-45,-3,-39,36,-36,-43,-38,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-40,-41,-74,-44,-34,36,-65,36,-37,-35,]),'GE':([37,53,57,58,59,61,63,84,85,87,120,123,129,130,131,134,135,141,],[-73,-48,-63,-70,-64,-71,94,-46,-45,94,-47,-52,-49,-51,-50,-74,-44,-65,]),'LE':([37,53,57,58,59,61,63,84,85,87,120,123,129,130,131,134,135,141,],[-73,-48,-63,-70,-64,-71,95,-46,-45,95,-47,-52,-49,-51,-50,-74,-44,-65,]),'FUNC':([0,1,3,5,11,14,16,18,21,46,48,73,76,111,113,145,147,],[2,-2,2,-1,2,-24,-19,2,-22,-18,-28,-23,-27,-20,-26,-25,-21,]),'INTEGER':([25,37,38,39,47,52,53,55,56,57,58,59,60,61,66,67,68,69,71,82,83,84,85,88,89,90,91,92,93,94,95,96,97,98,105,106,107,112,120,123,129,130,131,134,135,136,137,141,142,],[58,-73,58,58,58,58,-48,58,58,-63,-70,-64,58,-71,58,58,58,58,58,58,58,-46,-45,58,58,58,58,58,58,58,58,58,58,58,58,-68,-69,58,-47,-52,-49,-51,-50,-74,-44,58,-67,-65,-66,]),'TIMES':([37,53,57,58,59,61,63,72,84,85,87,102,103,104,106,110,120,121,122,123,124,125,126,127,128,129,130,131,134,135,137,141,142,],[-73,-48,-63,-70,-64,-71,97,97,-46,-45,97,97,97,97,97,97,-47,97,97,-52,97,97,97,97,97,97,-51,97,-74,-44,97,-65,97,]),'EQ':([37,53,57,58,59,61,63,84,85,87,120,123,129,130,131,134,135,141,],[-73,-48,-63,-70,-64,-71,91,-46,-45,91,-47,-52,-49,-51,-50,-74,-44,-65,]),'ID':([2,6,11,12,14,15,16,18,21,22,24,25,27,28,29,31,32,33,34,35,37,38,39,40,41,42,43,45,46,48,49,50,51,52,53,55,56,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,76,77,80,81,82,83,84,85,88,89,90,91,92,93,94,95,96,97,98,101,102,105,106,107,108,109,111,113,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,],[4,10,17,10,-24,37,-19,17,-22,37,-16,37,-9,37,-15,-4,-8,-17,-14,-13,-73,37,37,-12,-11,-10,-7,37,-18,-28,-6,37,79,37,-48,37,37,-63,-70,-64,37,-71,37,37,37,37,37,37,37,-42,-23,37,-27,-5,-61,37,37,37,-46,-45,37,37,37,37,37,37,37,37,37,37,37,-3,-39,37,-68,-69,37,-36,-20,-26,-43,-38,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-40,-41,-74,-44,37,-67,-34,37,-65,-66,37,-37,-25,-35,-21,]),'IF':([15,22,24,27,28,29,31,32,33,34,35,37,40,41,42,43,45,49,50,53,57,58,59,61,65,70,72,74,77,80,81,84,85,101,102,108,109,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,139,141,143,144,146,],[38,38,-16,-9,38,-15,-4,-8,-17,-14,-13,-73,-12,-11,-10,-7,38,-6,38,-48,-63,-70,-64,-71,38,38,-42,38,-5,-61,38,-46,-45,-3,-39,38,-36,-43,-38,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-40,-41,-74,-44,-34,38,-65,38,-37,-35,]),'LOR':([37,53,54,57,58,59,61,70,80,84,85,86,117,118,119,120,122,123,124,125,126,127,128,129,130,131,134,135,141,],[-73,-48,83,-63,-70,-64,-71,83,-61,-46,-45,83,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-74,-44,-65,]),'FLOAT':([25,37,38,39,47,52,53,55,56,57,58,59,60,61,66,67,68,69,71,82,83,84,85,88,89,90,91,92,93,94,95,96,97,98,105,106,107,112,120,123,129,130,131,134,135,136,137,141,142,],[61,-73,61,61,61,61,-48,61,61,-63,-70,-64,61,-71,61,61,61,61,61,61,61,-46,-45,61,61,61,61,61,61,61,61,61,61,61,61,-68,-69,61,-47,-52,-49,-51,-50,-74,-44,61,-67,-65,-66,]),'BREAK':([15,22,24,27,28,29,31,32,33,34,35,37,40,41,42,43,45,49,50,53,57,58,59,61,65,70,72,74,77,80,81,84,85,101,102,108,109,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,138,139,141,143,144,146,],[40,40,-16,-9,40,-15,-4,-8,-17,-14,-13,-73,-12,-11,-10,-7,40,-6,40,-48,-63,-70,-64,-71,40,40,-42,40,-5,-61,40,-46,-45,-3,-39,40,-36,-43,-38,-59,-60,-62,-47,-54,-52,-57,-53,-58,-56,-55,-49,-51,-50,-40,-41,-74,-44,-34,40,-65,40,-37,-35,]),'TYPENAME':([13,25,37,38,39,44,52,53,55,56,57,58,59,60,61,66,67,68,69,71,82,83,84,85,88,89,90,91,92,93,94,95,96,97,98,105,106,107,120,123,129,130,131,134,135,136,137,141,142,],[20,62,-73,62,62,73,62,-48,62,62,-63,-70,-64,62,-71,62,62,62,62,62,62,62,-46,-45,62,62,62,62,62,62,62,62,62,62,62,62,-68,-69,-47,-52,-49,-51,-50,-74,-44,62,-67,-65,-66,]),'RBRACKET':([37,53,57,58,59,61,75,84,85,104,120,123,129,130,131,134,135,140,141,],[-73,-48,-63,-70,-64,-71,114,-46,-45,134,-47,-52,-49,-51,-50,-74,-44,145,-65,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([15,28,45,],[22,65,74,]),'funcall':([15,22,25,28,38,39,45,50,52,55,56,60,65,66,67,68,69,70,71,74,81,82,83,88,89,90,91,92,93,94,95,96,97,98,105,108,136,139,143,],[24,24,53,24,53,53,24,24,53,53,53,53,24,53,53,53,53,24,53,24,24,53,53,53,53,53,53,53,53,53,53,53,53,53,53,24,53,24,24,]),'cond':([25,38,52,60,82,83,],[54,70,80,86,117,118,]),'return':([15,22,28,45,50,65,70,74,81,108,139,143,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'locals':([11,],[18,]),'if':([15,22,28,45,50,65,70,74,81,108,139,143,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'literals':([64,],[99,]),'parameters':([6,],[8,]),'write':([15,22,28,45,50,65,70,74,81,108,139,143,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'literal':([25,38,39,47,52,55,56,60,66,67,68,69,71,82,83,88,89,90,91,92,93,94,95,96,97,98,105,112,136,],[59,59,59,75,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,140,59,]),'program':([0,],[3,]),'location':([15,22,25,28,38,39,45,50,51,52,55,56,60,65,66,67,68,69,70,71,74,81,82,83,88,89,90,91,92,93,94,95,96,97,98,105,108,136,139,143,],[30,30,57,30,57,57,30,30,78,57,57,57,57,30,57,57,57,57,30,57,30,30,57,57,57,57,57,57,57,57,57,57,57,57,57,57,30,57,30,30,]),'statement':([15,22,28,45,50,65,70,74,81,108,139,143,],[31,49,31,31,77,49,109,49,116,138,144,146,]),'print':([15,22,28,45,50,65,70,74,81,108,139,143,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'local':([11,18,],[16,46,]),'empty':([6,69,],[9,107,]),'function':([0,3,11,18,],[1,5,14,14,]),'if_else':([15,22,28,45,50,65,70,74,81,108,139,143,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'read':([15,22,28,45,50,65,70,74,81,108,139,143,],[34,34,34,34,34,34,34,34,34,34,34,34,]),'exprlist':([69,],[105,]),'parm_declaration':([6,12,],[7,19,]),'while':([15,22,28,45,50,65,70,74,81,108,139,143,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'expression':([25,38,39,52,55,56,60,66,67,68,69,71,82,83,88,89,90,91,92,93,94,95,96,97,98,105,136,],[63,63,72,63,84,85,87,102,103,104,106,110,63,63,121,122,123,124,125,126,127,128,129,130,131,137,142,]),'assign':([15,22,28,45,50,65,70,74,81,108,139,143,],[43,43,43,43,43,43,43,43,43,43,43,43,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program function','program',2,'p_program','mpasparse.py',18),
  ('program -> function','program',1,'p_program','mpasparse.py',19),
  ('statement -> BEGIN statements END','statement',3,'p_st','mpasparse.py',31),
  ('statements -> statement','statements',1,'p_statements','mpasparse.py',44),
  ('statements -> statements SEMI statement','statements',3,'p_statements_1','mpasparse.py',53),
  ('statements -> statements statement','statements',2,'p_statementsError','mpasparse.py',62),
  ('statement -> assign','statement',1,'p_statement','mpasparse.py',73),
  ('statement -> print','statement',1,'p_statement','mpasparse.py',74),
  ('statement -> if','statement',1,'p_statement','mpasparse.py',75),
  ('statement -> if_else','statement',1,'p_statement','mpasparse.py',76),
  ('statement -> while','statement',1,'p_statement','mpasparse.py',77),
  ('statement -> BREAK','statement',1,'p_statement','mpasparse.py',78),
  ('statement -> SKIP','statement',1,'p_statement','mpasparse.py',79),
  ('statement -> read','statement',1,'p_statement','mpasparse.py',80),
  ('statement -> write','statement',1,'p_statement','mpasparse.py',81),
  ('statement -> funcall','statement',1,'p_statement','mpasparse.py',82),
  ('statement -> return','statement',1,'p_statement','mpasparse.py',83),
  ('locals -> locals local','locals',2,'p_locals','mpasparse.py',101),
  ('locals -> local','locals',1,'p_locals_1','mpasparse.py',109),
  ('local -> ID COLON TYPENAME SEMI','local',4,'p_local','mpasparse.py',116),
  ('local -> ID COLON TYPENAME LBRACKET literal RBRACKET SEMI','local',7,'p_local_1','mpasparse.py',124),
  ('local -> function SEMI','local',2,'p_local_2','mpasparse.py',132),
  ('local -> ID COLON TYPENAME','local',3,'p_localError','mpasparse.py',140),
  ('local -> function','local',1,'p_localError','mpasparse.py',141),
  ('local -> ID COLON TYPENAME LBRACKET literal RBRACKET','local',6,'p_localError','mpasparse.py',142),
  ('function -> FUNC ID LPAREN parameters RPAREN locals BEGIN statements END','function',9,'p_fundecl','mpasparse.py',149),
  ('function -> FUNC ID LPAREN parameters RPAREN BEGIN statements END SEMI','function',9,'p_FunctionError1','mpasparse.py',157),
  ('function -> FUNC ID LPAREN parameters RPAREN BEGIN statements END','function',8,'p_fundecl_1','mpasparse.py',162),
  ('parameters -> parameters COMMA parm_declaration','parameters',3,'p_parameters','mpasparse.py',170),
  ('parameters -> parm_declaration','parameters',1,'p_parameters_1','mpasparse.py',178),
  ('parameters -> empty','parameters',1,'p_parameters_1','mpasparse.py',179),
  ('parm_declaration -> ID COLON TYPENAME','parm_declaration',3,'p_parm_declaration','mpasparse.py',186),
  ('parm_declaration -> ID COLON TYPENAME LBRACKET literal RBRACKET','parm_declaration',6,'p_parm_declaration_1','mpasparse.py',193),
  ('if -> IF cond THEN statement','if',4,'p_if','mpasparse.py',200),
  ('if_else -> IF cond THEN statement ELSE statement','if_else',6,'p_if_else','mpasparse.py',207),
  ('if -> IF cond statement','if',3,'p_ifError','mpasparse.py',214),
  ('if_else -> IF cond statement ELSE statement','if_else',5,'p_if_elseError','mpasparse.py',220),
  ('while -> WHILE cond DO statement','while',4,'p_while','mpasparse.py',227),
  ('assign -> location ASSIGN expression','assign',3,'p_assign','mpasparse.py',234),
  ('print -> PRINT LPAREN literals RPAREN','print',4,'p_print','mpasparse.py',241),
  ('write -> WRITE LPAREN expression RPAREN','write',4,'p_write','mpasparse.py',248),
  ('return -> RETURN expression','return',2,'p_return','mpasparse.py',255),
  ('read -> READ LPAREN location RPAREN','read',4,'p_read','mpasparse.py',262),
  ('funcall -> ID LPAREN exprlist RPAREN','funcall',4,'p_expression_funcall_1','mpasparse.py',270),
  ('expression -> PLUS expression','expression',2,'p_expression_unary','mpasparse.py',277),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mpasparse.py',278),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mpasparse.py',286),
  ('expression -> funcall','expression',1,'p_expression_funcall','mpasparse.py',293),
  ('expression -> expression PLUS expression','expression',3,'p_expression','mpasparse.py',300),
  ('expression -> expression MINUS expression','expression',3,'p_expression','mpasparse.py',301),
  ('expression -> expression TIMES expression','expression',3,'p_expression','mpasparse.py',302),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','mpasparse.py',303),
  ('cond -> expression LT expression','cond',3,'p_comp','mpasparse.py',318),
  ('cond -> expression GT expression','cond',3,'p_comp','mpasparse.py',319),
  ('cond -> expression LE expression','cond',3,'p_comp','mpasparse.py',320),
  ('cond -> expression GE expression','cond',3,'p_comp','mpasparse.py',321),
  ('cond -> expression EQ expression','cond',3,'p_comp','mpasparse.py',322),
  ('cond -> expression NE expression','cond',3,'p_comp','mpasparse.py',323),
  ('cond -> cond LAND cond','cond',3,'p_cond','mpasparse.py',342),
  ('cond -> cond LOR cond','cond',3,'p_cond','mpasparse.py',343),
  ('cond -> LNOT cond','cond',2,'p_cond','mpasparse.py',344),
  ('cond -> LPAREN cond RPAREN','cond',3,'p_cond_1','mpasparse.py',368),
  ('expression -> location','expression',1,'p_expression_1','mpasparse.py',375),
  ('expression -> literal','expression',1,'p_expression_1','mpasparse.py',376),
  ('expression -> TYPENAME LPAREN expression RPAREN','expression',4,'p_expression_2','mpasparse.py',383),
  ('exprlist -> exprlist COMMA expression','exprlist',3,'p_exprlist','mpasparse.py',390),
  ('exprlist -> exprlist expression','exprlist',2,'p_exprlistError','mpasparse.py',398),
  ('exprlist -> expression','exprlist',1,'p_exprlist_1','mpasparse.py',404),
  ('exprlist -> empty','exprlist',1,'p_exprlist_1','mpasparse.py',405),
  ('literal -> INTEGER','literal',1,'p_literal','mpasparse.py',414),
  ('literal -> FLOAT','literal',1,'p_literal_1','mpasparse.py',421),
  ('literals -> STRING','literals',1,'p_literal_2','mpasparse.py',428),
  ('location -> ID','location',1,'p_location','mpasparse.py',435),
  ('location -> ID LBRACKET expression RBRACKET','location',4,'p_location_2','mpasparse.py',442),
  ('empty -> <empty>','empty',0,'p_empty','mpasparse.py',451),
]
