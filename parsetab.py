
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xde(\x08\x1c=\xb3\xf3\x89\xa8Z]\xc5\x18H\xfcV'
    
_lr_action_items = {'DO':([36,53,54,57,58,59,61,84,89,90,123,124,125,126,128,129,130,131,132,133,134,135,136,137,140,141,149,],[-76,-51,85,-66,-73,-67,-74,-64,-49,-48,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-77,-47,-68,]),'LNOT':([24,37,52,60,86,88,],[52,52,52,52,52,52,]),'RETURN':([15,21,23,26,27,28,30,31,32,33,34,36,38,39,40,41,42,45,49,50,53,54,57,58,59,61,65,70,71,72,73,75,78,81,84,85,87,89,90,106,107,113,114,115,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,149,151,152,155,],[38,38,-16,-9,38,-15,-4,-8,-17,-14,-13,-76,38,-12,-11,-10,-7,38,-6,38,-51,38,-66,-73,-67,-74,38,38,-16,-66,-45,-44,38,-5,-64,38,-40,-49,-48,-3,-41,38,-36,38,-46,-39,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-42,-43,-77,-47,-34,38,-37,-68,38,-38,-35,]),'LPAREN':([4,22,24,25,35,36,37,38,52,53,55,56,57,58,59,60,61,62,66,67,68,69,74,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,110,111,112,115,126,129,135,136,137,140,141,142,143,149,150,],[6,51,60,64,67,69,60,74,60,-51,74,74,-66,-73,-67,60,-74,93,74,74,74,74,74,60,60,-49,-48,74,74,74,74,74,74,74,74,74,74,74,74,-71,-72,69,-50,-55,-52,-54,-53,-77,-47,74,-70,-68,-69,]),'THEN':([36,53,57,58,59,61,70,84,89,90,123,124,125,126,128,129,130,131,132,133,134,135,136,137,140,141,149,],[-76,-51,-66,-73,-67,-74,113,-64,-49,-48,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-77,-47,-68,]),'READ':([15,21,23,26,27,28,30,31,32,33,34,36,38,39,40,41,42,45,49,50,53,54,57,58,59,61,65,70,71,72,73,75,78,81,84,85,87,89,90,106,107,113,114,115,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,149,151,152,155,],[22,22,-16,-9,22,-15,-4,-8,-17,-14,-13,-76,22,-12,-11,-10,-7,22,-6,22,-51,22,-66,-73,-67,-74,22,22,-16,-66,-45,-44,22,-5,-64,22,-40,-49,-48,-3,-41,22,-36,22,-46,-39,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-42,-43,-77,-47,-34,22,-37,-68,22,-38,-35,]),'LBRACKET':([20,36,76,77,83,115,],[47,68,117,118,68,68,]),'WHILE':([15,21,23,26,27,28,30,31,32,33,34,36,38,39,40,41,42,45,49,50,53,54,57,58,59,61,65,70,71,72,73,75,78,81,84,85,87,89,90,106,107,113,114,115,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,149,151,152,155,],[24,24,-16,-9,24,-15,-4,-8,-17,-14,-13,-76,24,-12,-11,-10,-7,24,-6,24,-51,24,-66,-73,-67,-74,24,24,-16,-66,-45,-44,24,-5,-64,24,-40,-49,-48,-3,-41,24,-36,24,-46,-39,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-42,-43,-77,-47,-34,24,-37,-68,24,-38,-35,]),'PRINT':([15,21,23,26,27,28,30,31,32,33,34,36,38,39,40,41,42,45,49,50,53,54,57,58,59,61,65,70,71,72,73,75,78,81,84,85,87,89,90,106,107,113,114,115,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,149,151,152,155,],[25,25,-16,-9,25,-15,-4,-8,-17,-14,-13,-76,25,-12,-11,-10,-7,25,-6,25,-51,25,-66,-73,-67,-74,25,25,-16,-66,-45,-44,25,-5,-64,25,-40,-49,-48,-3,-41,25,-36,25,-46,-39,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-42,-43,-77,-47,-34,25,-37,-68,25,-38,-35,]),'MINUS':([24,36,37,38,52,53,55,56,57,58,59,60,61,63,66,67,68,69,71,72,74,75,86,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,107,108,109,110,111,112,116,126,127,128,129,130,131,132,133,134,135,136,137,140,141,142,143,149,150,],[55,-76,55,55,55,-51,55,55,-66,-73,-67,55,-74,103,55,55,55,55,-51,-66,55,103,55,55,-49,-48,103,55,55,55,55,55,55,55,55,55,55,55,103,103,103,55,103,-72,103,-50,103,103,-55,103,103,103,103,103,-52,-54,-53,-77,-47,55,103,-68,103,]),'STRING':([64,],[105,]),'BEGIN':([11,14,15,16,18,21,23,26,27,28,30,31,32,33,34,36,38,39,40,41,42,43,45,46,48,49,50,53,54,57,58,59,61,65,70,71,72,73,75,76,77,78,79,81,84,85,87,89,90,106,107,113,114,115,119,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,149,151,152,153,154,155,],[15,-22,27,-24,45,27,-16,-9,27,-15,-4,-8,-17,-14,-13,-76,27,-12,-11,-10,-7,-19,27,-23,-28,-6,27,-51,27,-66,-73,-67,-74,27,27,-16,-66,-45,-44,-20,-25,27,-18,-5,-64,27,-40,-49,-48,-3,-41,27,-36,27,-27,-46,-39,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-42,-43,-77,-47,-34,27,-37,-68,27,-38,-21,-26,-35,]),'LAND':([36,53,54,57,58,59,61,70,84,89,90,91,123,124,125,126,128,129,130,131,132,133,134,135,136,137,140,141,149,],[-76,-51,86,-66,-73,-67,-74,86,-64,-49,-48,86,-62,86,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-77,-47,-68,]),'RPAREN':([6,7,8,9,19,20,36,53,57,58,59,61,69,82,83,84,89,90,91,92,104,105,108,110,111,112,116,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,141,143,149,150,],[-78,-30,11,-31,-29,-32,-76,-51,-66,-73,-67,-74,-78,121,-76,-64,-49,-48,125,126,138,-75,139,141,-71,-72,126,-33,-62,-63,-65,-50,149,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-77,-47,-70,-68,-69,]),'SEMI':([14,16,21,23,26,28,30,31,32,33,34,36,39,40,41,42,46,48,49,53,57,58,59,61,65,71,72,73,75,76,77,78,81,87,89,90,106,107,114,119,121,122,126,129,135,136,137,138,139,140,141,144,146,149,152,153,154,155,],[-22,43,50,-16,-9,-15,-4,-8,-17,-14,-13,-76,-12,-11,-10,-7,79,-28,-6,-51,-66,-73,-67,-74,50,-16,-66,-45,-44,-20,-25,50,-5,-40,-49,-48,-3,-41,-36,-27,-46,-39,-50,-55,-52,-54,-53,-42,-43,-77,-47,-34,-37,-68,-38,-21,-26,-35,]),'NE':([36,53,57,58,59,61,63,89,90,92,126,129,135,136,137,140,141,149,],[-76,-51,-66,-73,-67,-74,98,-49,-48,98,-50,-55,-52,-54,-53,-77,-47,-68,]),'PLUS':([24,36,37,38,52,53,55,56,57,58,59,60,61,63,66,67,68,69,71,72,74,75,86,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,107,108,109,110,111,112,116,126,127,128,129,130,131,132,133,134,135,136,137,140,141,142,143,149,150,],[56,-76,56,56,56,-51,56,56,-66,-73,-67,56,-74,101,56,56,56,56,-51,-66,56,101,56,56,-49,-48,101,56,56,56,56,56,56,56,56,56,56,56,101,101,101,56,101,-72,101,-50,101,101,-55,101,101,101,101,101,-52,-54,-53,-77,-47,56,101,-68,101,]),'LT':([36,53,57,58,59,61,63,89,90,92,126,129,135,136,137,140,141,149,],[-76,-51,-66,-73,-67,-74,97,-49,-48,97,-50,-55,-52,-54,-53,-77,-47,-68,]),'COMMA':([6,7,8,9,19,20,36,53,57,58,59,61,69,89,90,110,111,112,120,126,129,135,136,137,140,141,143,149,150,],[-78,-30,12,-31,-29,-32,-76,-51,-66,-73,-67,-74,-78,-49,-48,142,-71,-72,-33,-50,-55,-52,-54,-53,-77,-47,-70,-68,-69,]),'COLON':([10,17,],[13,44,]),'ASSIGN':([29,36,72,115,140,],[66,-76,66,-76,-77,]),'$end':([1,3,5,48,119,],[-2,0,-1,-28,-27,]),'GT':([36,53,57,58,59,61,63,89,90,92,126,129,135,136,137,140,141,149,],[-76,-51,-66,-73,-67,-74,94,-49,-48,94,-50,-55,-52,-54,-53,-77,-47,-68,]),'END':([21,23,26,28,30,31,32,33,34,36,39,40,41,42,49,53,57,58,59,61,65,71,72,73,75,78,81,87,89,90,106,107,114,121,122,126,129,135,136,137,138,139,140,141,144,146,149,152,155,],[48,-16,-9,-15,-4,-8,-17,-14,-13,-76,-12,-11,-10,-7,-6,-51,-66,-73,-67,-74,106,-16,-66,-45,-44,119,-5,-40,-49,-48,-3,-41,-36,-46,-39,-50,-55,-52,-54,-53,-42,-43,-77,-47,-34,-37,-68,-38,-35,]),'DIVIDE':([36,53,57,58,59,61,63,71,72,75,89,90,92,107,108,109,111,116,126,127,128,129,130,131,132,133,134,135,136,137,140,141,143,149,150,],[-76,-51,-66,-73,-67,-74,95,-51,-66,95,-49,-48,95,95,95,95,95,95,-50,95,95,-55,95,95,95,95,95,95,-54,95,-77,-47,95,-68,95,]),'SKIP':([15,21,23,26,27,28,30,31,32,33,34,36,38,39,40,41,42,45,49,50,53,54,57,58,59,61,65,70,71,72,73,75,78,81,84,85,87,89,90,106,107,113,114,115,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,149,151,152,155,],[34,34,-16,-9,34,-15,-4,-8,-17,-14,-13,-76,34,-12,-11,-10,-7,34,-6,34,-51,34,-66,-73,-67,-74,34,34,-16,-66,-45,-44,34,-5,-64,34,-40,-49,-48,-3,-41,34,-36,34,-46,-39,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-42,-43,-77,-47,-34,34,-37,-68,34,-38,-35,]),'ELSE':([23,26,28,31,32,33,34,36,39,40,41,42,53,57,58,59,61,71,72,73,75,87,89,90,106,107,114,121,122,126,129,135,136,137,138,139,140,141,144,146,149,152,155,],[-16,-9,-15,-8,-17,-14,-13,-76,-12,-11,-10,-7,-51,-66,-73,-67,-74,-16,-66,-45,-44,-40,-49,-48,-3,-41,145,-46,-39,-50,-55,-52,-54,-53,-42,-43,-77,-47,151,-37,-68,-38,-35,]),'WRITE':([15,21,23,26,27,28,30,31,32,33,34,36,38,39,40,41,42,45,49,50,53,54,57,58,59,61,65,70,71,72,73,75,78,81,84,85,87,89,90,106,107,113,114,115,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,149,151,152,155,],[35,35,-16,-9,35,-15,-4,-8,-17,-14,-13,-76,35,-12,-11,-10,-7,35,-6,35,-51,35,-66,-73,-67,-74,35,35,-16,-66,-45,-44,35,-5,-64,35,-40,-49,-48,-3,-41,35,-36,35,-46,-39,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-42,-43,-77,-47,-34,35,-37,-68,35,-38,-35,]),'GE':([36,53,57,58,59,61,63,89,90,92,126,129,135,136,137,140,141,149,],[-76,-51,-66,-73,-67,-74,99,-49,-48,99,-50,-55,-52,-54,-53,-77,-47,-68,]),'LE':([36,53,57,58,59,61,63,89,90,92,126,129,135,136,137,140,141,149,],[-76,-51,-66,-73,-67,-74,100,-49,-48,100,-50,-55,-52,-54,-53,-77,-47,-68,]),'FUNC':([0,1,3,5,11,14,16,18,43,46,48,76,77,79,119,153,154,],[2,-2,2,-1,2,-22,-24,2,-19,-23,-28,-20,-25,-18,-27,-21,-26,]),'INTEGER':([24,36,37,38,47,52,53,55,56,57,58,59,60,61,66,67,68,69,74,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,110,111,112,117,118,126,129,135,136,137,140,141,142,143,149,150,],[58,-76,58,58,58,58,-51,58,58,-66,-73,-67,58,-74,58,58,58,58,58,58,58,-49,-48,58,58,58,58,58,58,58,58,58,58,58,58,-71,-72,58,58,-50,-55,-52,-54,-53,-77,-47,58,-70,-68,-69,]),'TIMES':([36,53,57,58,59,61,63,71,72,75,89,90,92,107,108,109,111,116,126,127,128,129,130,131,132,133,134,135,136,137,140,141,143,149,150,],[-76,-51,-66,-73,-67,-74,102,-51,-66,102,-49,-48,102,102,102,102,102,102,-50,102,102,-55,102,102,102,102,102,102,-54,102,-77,-47,102,-68,102,]),'EQ':([36,53,57,58,59,61,63,89,90,92,126,129,135,136,137,140,141,149,],[-76,-51,-66,-73,-67,-74,96,-49,-48,96,-50,-55,-52,-54,-53,-77,-47,-68,]),'ID':([2,6,11,12,14,15,16,18,21,23,24,26,27,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,106,107,110,111,112,113,114,115,119,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,150,151,152,153,154,155,],[4,10,17,10,-22,36,-24,17,36,-16,36,-9,36,-15,-4,-8,-17,-14,-13,-76,36,36,-12,-11,-10,-7,-19,77,36,-23,-28,-6,36,83,36,-51,36,36,36,-66,-73,-67,36,-74,36,36,36,36,36,115,-16,-66,-45,36,-44,-20,-25,36,-18,-5,-64,36,36,-40,36,-49,-48,36,36,36,36,36,36,36,36,36,36,36,-3,-41,36,-71,-72,36,-36,36,-27,-46,-39,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-42,-43,-77,-47,36,-70,-34,36,-37,-68,-69,36,-38,-21,-26,-35,]),'IF':([15,21,23,26,27,28,30,31,32,33,34,36,38,39,40,41,42,45,49,50,53,54,57,58,59,61,65,70,71,72,73,75,78,81,84,85,87,89,90,106,107,113,114,115,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,149,151,152,155,],[37,37,-16,-9,37,-15,-4,-8,-17,-14,-13,-76,37,-12,-11,-10,-7,37,-6,37,-51,37,-66,-73,-67,-74,37,37,-16,-66,-45,-44,37,-5,-64,37,-40,-49,-48,-3,-41,37,-36,37,-46,-39,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-42,-43,-77,-47,-34,37,-37,-68,37,-38,-35,]),'LOR':([36,53,54,57,58,59,61,70,84,89,90,91,123,124,125,126,128,129,130,131,132,133,134,135,136,137,140,141,149,],[-76,-51,88,-66,-73,-67,-74,88,-64,-49,-48,88,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-77,-47,-68,]),'FLOAT':([24,36,37,38,47,52,53,55,56,57,58,59,60,61,66,67,68,69,74,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,110,111,112,117,118,126,129,135,136,137,140,141,142,143,149,150,],[61,-76,61,61,61,61,-51,61,61,-66,-73,-67,61,-74,61,61,61,61,61,61,61,-49,-48,61,61,61,61,61,61,61,61,61,61,61,61,-71,-72,61,61,-50,-55,-52,-54,-53,-77,-47,61,-70,-68,-69,]),'BREAK':([15,21,23,26,27,28,30,31,32,33,34,36,38,39,40,41,42,45,49,50,53,54,57,58,59,61,65,70,71,72,73,75,78,81,84,85,87,89,90,106,107,113,114,115,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,149,151,152,155,],[39,39,-16,-9,39,-15,-4,-8,-17,-14,-13,-76,39,-12,-11,-10,-7,39,-6,39,-51,39,-66,-73,-67,-74,39,39,-16,-66,-45,-44,39,-5,-64,39,-40,-49,-48,-3,-41,39,-36,39,-46,-39,-62,-63,-65,-50,-57,-55,-60,-56,-61,-59,-58,-52,-54,-53,-42,-43,-77,-47,-34,39,-37,-68,39,-38,-35,]),'TYPENAME':([13,24,36,37,38,44,52,53,55,56,57,58,59,60,61,66,67,68,69,74,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,110,111,112,126,129,135,136,137,140,141,142,143,149,150,],[20,62,-76,62,62,76,62,-51,62,62,-66,-73,-67,62,-74,62,62,62,62,62,62,62,-49,-48,62,62,62,62,62,62,62,62,62,62,62,62,-71,-72,-50,-55,-52,-54,-53,-77,-47,62,-70,-68,-69,]),'RBRACKET':([36,53,57,58,59,61,80,89,90,109,126,129,135,136,137,140,141,147,148,149,],[-76,-51,-66,-73,-67,-74,120,-49,-48,140,-50,-55,-52,-54,-53,-77,-47,153,154,-68,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([15,27,45,],[21,65,78,]),'funcall':([15,21,24,27,37,38,45,50,52,54,55,56,60,65,66,67,68,69,70,74,78,85,86,88,93,94,95,96,97,98,99,100,101,102,103,110,113,115,142,145,151,],[23,23,53,23,53,71,23,23,53,23,53,53,53,23,53,53,53,53,23,53,23,23,53,53,53,53,53,53,53,53,53,53,53,53,53,53,23,23,53,23,23,]),'cond':([24,37,52,60,86,88,],[54,70,84,91,123,124,]),'return':([15,21,27,38,45,50,54,65,70,78,85,113,115,145,151,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'locals':([11,],[18,]),'if':([15,21,27,38,45,50,54,65,70,78,85,113,115,145,151,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'literals':([64,],[104,]),'parameters':([6,],[8,]),'write':([15,21,27,38,45,50,54,65,70,78,85,113,115,145,151,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'literal':([24,37,38,47,52,55,56,60,66,67,68,69,74,86,88,93,94,95,96,97,98,99,100,101,102,103,110,117,118,142,],[59,59,59,80,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,147,148,59,]),'program':([0,],[3,]),'location':([15,21,24,27,37,38,45,50,51,52,54,55,56,60,65,66,67,68,69,70,74,78,85,86,88,93,94,95,96,97,98,99,100,101,102,103,110,113,115,142,145,151,],[29,29,57,29,57,72,29,29,82,57,29,57,57,57,29,57,57,57,57,29,57,29,29,57,57,57,57,57,57,57,57,57,57,57,57,57,57,29,29,57,29,29,]),'statement':([15,21,27,38,45,50,54,65,70,78,85,113,115,145,151,],[30,49,30,73,30,81,87,49,114,49,122,144,146,152,155,]),'print':([15,21,27,38,45,50,54,65,70,78,85,113,115,145,151,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'local':([11,18,],[16,46,]),'empty':([6,69,],[9,112,]),'function':([0,3,11,18,],[1,5,14,14,]),'if_else':([15,21,27,38,45,50,54,65,70,78,85,113,115,145,151,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'read':([15,21,27,38,45,50,54,65,70,78,85,113,115,145,151,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'exprlist':([69,],[110,]),'parm_declaration':([6,12,],[7,19,]),'while':([15,21,27,38,45,50,54,65,70,78,85,113,115,145,151,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'expression':([24,37,38,52,55,56,60,66,67,68,69,74,86,88,93,94,95,96,97,98,99,100,101,102,103,110,142,],[63,63,75,63,89,90,92,107,108,109,111,116,63,63,127,128,129,130,131,132,133,134,135,136,137,143,150,]),'assign':([15,21,27,38,45,50,54,65,70,78,85,113,115,145,151,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program function','program',2,'p_program','mpasparse.py',18),
  ('program -> function','program',1,'p_program','mpasparse.py',19),
  ('statement -> BEGIN statements END','statement',3,'p_st','mpasparse.py',30),
  ('statements -> statement','statements',1,'p_statements','mpasparse.py',42),
  ('statements -> statements SEMI statement','statements',3,'p_statements_1','mpasparse.py',50),
  ('statements -> statements statement','statements',2,'p_statementsError','mpasparse.py',58),
  ('statement -> assign','statement',1,'p_statement','mpasparse.py',68),
  ('statement -> print','statement',1,'p_statement','mpasparse.py',69),
  ('statement -> if','statement',1,'p_statement','mpasparse.py',70),
  ('statement -> if_else','statement',1,'p_statement','mpasparse.py',71),
  ('statement -> while','statement',1,'p_statement','mpasparse.py',72),
  ('statement -> BREAK','statement',1,'p_statement','mpasparse.py',73),
  ('statement -> SKIP','statement',1,'p_statement','mpasparse.py',74),
  ('statement -> read','statement',1,'p_statement','mpasparse.py',75),
  ('statement -> write','statement',1,'p_statement','mpasparse.py',76),
  ('statement -> funcall','statement',1,'p_statement','mpasparse.py',77),
  ('statement -> return','statement',1,'p_statement','mpasparse.py',78),
  ('locals -> locals local SEMI','locals',3,'p_locals','mpasparse.py',95),
  ('locals -> local SEMI','locals',2,'p_locals_1','mpasparse.py',102),
  ('local -> ID COLON TYPENAME','local',3,'p_local','mpasparse.py',108),
  ('local -> ID COLON TYPENAME LBRACKET literal RBRACKET','local',6,'p_local_1','mpasparse.py',115),
  ('local -> function','local',1,'p_local_2','mpasparse.py',122),
  ('locals -> locals local','locals',2,'p_localError1','mpasparse.py',130),
  ('locals -> local','locals',1,'p_localError2','mpasparse.py',139),
  ('local -> ID COLON ID','local',3,'p_localError3','mpasparse.py',147),
  ('local -> ID COLON ID LBRACKET literal RBRACKET','local',6,'p_localError3','mpasparse.py',148),
  ('function -> FUNC ID LPAREN parameters RPAREN locals BEGIN statements END','function',9,'p_fundecl','mpasparse.py',155),
  ('function -> FUNC ID LPAREN parameters RPAREN BEGIN statements END','function',8,'p_fundecl_1','mpasparse.py',167),
  ('parameters -> parameters COMMA parm_declaration','parameters',3,'p_parameters','mpasparse.py',174),
  ('parameters -> parm_declaration','parameters',1,'p_parameters_1','mpasparse.py',181),
  ('parameters -> empty','parameters',1,'p_parameters_1','mpasparse.py',182),
  ('parm_declaration -> ID COLON TYPENAME','parm_declaration',3,'p_parm_declaration','mpasparse.py',188),
  ('parm_declaration -> ID COLON TYPENAME LBRACKET literal RBRACKET','parm_declaration',6,'p_parm_declaration_1','mpasparse.py',194),
  ('if -> IF cond THEN statement','if',4,'p_if','mpasparse.py',200),
  ('if_else -> IF cond THEN statement ELSE statement','if_else',6,'p_if_else','mpasparse.py',206),
  ('if -> IF cond statement','if',3,'p_ifError1','mpasparse.py',212),
  ('if -> IF cond ID statement','if',4,'p_ifError2','mpasparse.py',219),
  ('if_else -> IF cond statement ELSE statement','if_else',5,'p_if_elseError','mpasparse.py',227),
  ('while -> WHILE cond DO statement','while',4,'p_while','mpasparse.py',234),
  ('while -> WHILE cond statement','while',3,'p_whileError','mpasparse.py',240),
  ('assign -> location ASSIGN expression','assign',3,'p_assign','mpasparse.py',248),
  ('print -> PRINT LPAREN literals RPAREN','print',4,'p_print','mpasparse.py',254),
  ('write -> WRITE LPAREN expression RPAREN','write',4,'p_write','mpasparse.py',260),
  ('return -> RETURN expression','return',2,'p_return','mpasparse.py',266),
  ('return -> RETURN statement','return',2,'p_returnError','mpasparse.py',272),
  ('read -> READ LPAREN location RPAREN','read',4,'p_read','mpasparse.py',280),
  ('funcall -> ID LPAREN exprlist RPAREN','funcall',4,'p_expression_funcall_1','mpasparse.py',287),
  ('expression -> PLUS expression','expression',2,'p_expression_unary','mpasparse.py',293),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mpasparse.py',294),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mpasparse.py',301),
  ('expression -> funcall','expression',1,'p_expression_funcall','mpasparse.py',307),
  ('expression -> expression PLUS expression','expression',3,'p_expression','mpasparse.py',313),
  ('expression -> expression MINUS expression','expression',3,'p_expression','mpasparse.py',314),
  ('expression -> expression TIMES expression','expression',3,'p_expression','mpasparse.py',315),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','mpasparse.py',316),
  ('cond -> expression LT expression','cond',3,'p_comp','mpasparse.py',330),
  ('cond -> expression GT expression','cond',3,'p_comp','mpasparse.py',331),
  ('cond -> expression LE expression','cond',3,'p_comp','mpasparse.py',332),
  ('cond -> expression GE expression','cond',3,'p_comp','mpasparse.py',333),
  ('cond -> expression EQ expression','cond',3,'p_comp','mpasparse.py',334),
  ('cond -> expression NE expression','cond',3,'p_comp','mpasparse.py',335),
  ('cond -> cond LAND cond','cond',3,'p_cond','mpasparse.py',353),
  ('cond -> cond LOR cond','cond',3,'p_cond','mpasparse.py',354),
  ('cond -> LNOT cond','cond',2,'p_cond','mpasparse.py',355),
  ('cond -> LPAREN cond RPAREN','cond',3,'p_cond_1','mpasparse.py',378),
  ('expression -> location','expression',1,'p_expression_1','mpasparse.py',384),
  ('expression -> literal','expression',1,'p_expression_1','mpasparse.py',385),
  ('expression -> TYPENAME LPAREN expression RPAREN','expression',4,'p_expression_2','mpasparse.py',391),
  ('exprlist -> exprlist COMMA expression','exprlist',3,'p_exprlist','mpasparse.py',397),
  ('exprlist -> exprlist expression','exprlist',2,'p_exprlistError','mpasparse.py',404),
  ('exprlist -> expression','exprlist',1,'p_exprlist_1','mpasparse.py',411),
  ('exprlist -> empty','exprlist',1,'p_exprlist_1','mpasparse.py',412),
  ('literal -> INTEGER','literal',1,'p_literal','mpasparse.py',420),
  ('literal -> FLOAT','literal',1,'p_literal_1','mpasparse.py',426),
  ('literals -> STRING','literals',1,'p_literal_2','mpasparse.py',432),
  ('location -> ID','location',1,'p_location','mpasparse.py',438),
  ('location -> ID LBRACKET expression RBRACKET','location',4,'p_location_2','mpasparse.py',444),
  ('empty -> <empty>','empty',0,'p_empty','mpasparse.py',452),
]
